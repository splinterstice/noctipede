apiVersion: apps/v1
kind: Deployment
metadata:
  name: noctipede-portal
  namespace: noctipede
  labels:
    app: noctipede-portal
    component: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: noctipede-portal
      component: web
  template:
    metadata:
      labels:
        app: noctipede-portal
        component: web
    spec:
      initContainers:
      - name: wait-for-database
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "üîç Waiting for MariaDB to be ready..."
          until nc -z mariadb 3306; do
            echo "‚è≥ MariaDB not ready, waiting..."
            sleep 5
          done
          echo "‚úÖ MariaDB is ready!"
      containers:
      - name: noctipede-portal
        image: ghcr.io/splinterstice/noctipede:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        command: ["sh", "-c"]
        args:
        - |
          echo "üåê Starting Noctipede Portal with DB fixes..."
          cd /app
          mkdir -p /tmp/output /tmp/logs
          export OUTPUT_DIR=/tmp/output
          # Database connection timeout fixes
          export SQLALCHEMY_ENGINE_OPTIONS='{"pool_timeout": 60, "pool_recycle": 3600, "pool_pre_ping": true, "connect_args": {"connect_timeout": 30, "read_timeout": 30, "write_timeout": 30}}'
          export DB_CONNECT_TIMEOUT=30
          export DB_READ_TIMEOUT=30
          export DB_WRITE_TIMEOUT=30
          export DB_POOL_TIMEOUT=60
          export DB_POOL_RECYCLE=3600
          PYTHONPATH=/app python -m portal.enhanced_portal
        envFrom:
        - configMapRef:
            name: noctipede-config
        - secretRef:
            name: noctipede-secrets
        env:
        # Additional database timeout settings
        - name: MARIADB_CONNECT_TIMEOUT
          value: "30"
        - name: MARIADB_READ_TIMEOUT
          value: "30"
        - name: MARIADB_WRITE_TIMEOUT
          value: "30"
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 30
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 45
          periodSeconds: 15
          timeoutSeconds: 15
          failureThreshold: 3
