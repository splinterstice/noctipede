services:
  # MariaDB Database
  mariadb:
    image: mariadb:11.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MARIADB_DATABASE:-splinter-research}
      MYSQL_USER: ${MARIADB_USER:-splinter-research}
      MYSQL_PASSWORD: ${MARIADB_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./docker/mariadb/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    command: >
      --default-authentication-plugin=mysql_native_password
      --bind-address=0.0.0.0
      --max-connections=1000
      --max-user-connections=950
      --thread-cache-size=100
      --table-open-cache=4000
      --innodb-buffer-pool-size=2G
      --innodb-log-file-size=512M
      --innodb-log-buffer-size=64M
      --innodb-flush-log-at-trx-commit=2
      --query-cache-type=1
      --query-cache-size=128M
      --tmp-table-size=256M
      --max-heap-table-size=256M
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Client for bucket initialization
  minio-init:
    image: minio/mc:latest
    depends_on:
      - minio
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME:-noctipede-data}
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set minio http://minio:9000 $${MINIO_ACCESS_KEY} $${MINIO_SECRET_KEY};
      /usr/bin/mc mb minio/$${MINIO_BUCKET_NAME} --ignore-existing;
      /usr/bin/mc policy set public minio/$${MINIO_BUCKET_NAME};
      exit 0;
      "

  # Noctipede Application
  noctipede-app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    restart: unless-stopped
    depends_on:
      mariadb:
        condition: service_healthy
      minio:
        condition: service_healthy
      tor-proxy:
        condition: service_started  # Changed from service_healthy to service_started
      i2p-proxy:
        condition: service_started  # I2P takes longer to be healthy
    environment:
      # Database
      MARIADB_HOST: mariadb
      MARIADB_PORT: 3306
      MARIADB_USER: ${MARIADB_USER:-splinter-research}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE:-splinter-research}
      
      # MinIO
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME:-noctipede-data}
      MINIO_SECURE: "false"
      
      # AI/Ollama
      OLLAMA_ENDPOINT: ${OLLAMA_ENDPOINT}
      OLLAMA_VISION_MODEL: ${OLLAMA_VISION_MODEL:-llama3.2-vision:11b}
      OLLAMA_TEXT_MODEL: ${OLLAMA_TEXT_MODEL:-gemma3:12b}
      OLLAMA_MODERATION_MODEL: ${OLLAMA_MODERATION_MODEL:-llama3.1:8b}
      
      # Content Analysis Configuration
      CONTENT_ANALYSIS_ENABLED: ${CONTENT_ANALYSIS_ENABLED:-true}
      IMAGE_ANALYSIS_ENABLED: ${IMAGE_ANALYSIS_ENABLED:-true}
      MODERATION_THRESHOLD: ${MODERATION_THRESHOLD:-30}
      MAX_IMAGE_SIZE_MB: ${MAX_IMAGE_SIZE_MB:-10}
      SUPPORTED_IMAGE_FORMATS: ${SUPPORTED_IMAGE_FORMATS:-webp,jpg,jpeg,png,gif,bmp,tiff,svg}
      
      # Application
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      OUTPUT_DIR: /app/output
      SITES_FILE_PATH: /app/data/sites.txt
      
      # Crawler settings
      MAX_LINKS_PER_PAGE: ${MAX_LINKS_PER_PAGE:-500}
      MAX_QUEUE_SIZE: ${MAX_QUEUE_SIZE:-1000}
      MAX_CRAWL_DEPTH: ${MAX_CRAWL_DEPTH:-10}
      MAX_OFFSITE_DEPTH: ${MAX_OFFSITE_DEPTH:-1}
      CRAWL_DELAY_SECONDS: ${CRAWL_DELAY_SECONDS:-3}
      MAX_CONCURRENT_CRAWLERS: ${MAX_CONCURRENT_CRAWLERS:-10}
      SKIP_RECENT_CRAWLS: "false"  # Temporarily disable to test crawling
      
      # Proxy Configuration
      TOR_PROXY_HOST: tor-proxy
      TOR_PROXY_PORT: 9150
      I2P_PROXY_HOST: i2p-proxy
      I2P_PROXY_PORT: 4444
      USE_I2P_INTERNAL_PROXIES: "true"  # Enable I2P internal proxy fallback
      I2P_INTERNAL_PROXIES: "notbob.i2p,purokishi.i2p,false.i2p,stormycloud.i2p"
    volumes:
      - ./data:/app/data
      - ./output:/app/output
      - ./logs:/app/logs
    command: ["sh", "-c", "cd /app && PYTHONPATH=/app python -m crawlers.main"]

  # Noctipede Web Portal
  noctipede-portal:
    build:
      context: .
      dockerfile: docker/Dockerfile
    restart: unless-stopped
    depends_on:
      mariadb:
        condition: service_healthy
      minio:
        condition: service_healthy
      tor-proxy:
        condition: service_started  # Changed from service_healthy to service_started
      i2p-proxy:
        condition: service_started  # Changed from service_healthy to service_started
    environment:
      # Database
      MARIADB_HOST: mariadb
      MARIADB_PORT: 3306
      MARIADB_USER: ${MARIADB_USER:-splinter-research}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE:-splinter-research}
      
      # MinIO
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME:-noctipede-data}
      MINIO_SECURE: "false"
      
      # AI/Ollama Configuration
      OLLAMA_ENDPOINT: ${OLLAMA_ENDPOINT}
      OLLAMA_VISION_MODEL: ${OLLAMA_VISION_MODEL:-llama3.2-vision:11b}
      OLLAMA_TEXT_MODEL: ${OLLAMA_TEXT_MODEL:-gemma3:12b}
      OLLAMA_MODERATION_MODEL: ${OLLAMA_MODERATION_MODEL:-llama3.1:8b}
      
      # Content Analysis Configuration
      CONTENT_ANALYSIS_ENABLED: ${CONTENT_ANALYSIS_ENABLED:-true}
      IMAGE_ANALYSIS_ENABLED: ${IMAGE_ANALYSIS_ENABLED:-true}
      MODERATION_THRESHOLD: ${MODERATION_THRESHOLD:-30}
      MAX_IMAGE_SIZE_MB: ${MAX_IMAGE_SIZE_MB:-10}
      SUPPORTED_IMAGE_FORMATS: ${SUPPORTED_IMAGE_FORMATS:-webp,jpg,jpeg,png,gif,bmp,tiff,svg}
      
      # Proxy Configuration
      TOR_PROXY_HOST: tor-proxy
      TOR_PROXY_PORT: 9150
      I2P_PROXY_HOST: i2p-proxy
      I2P_PROXY_PORT: 4444
      USE_I2P_INTERNAL_PROXIES: "true"  # Enable I2P internal proxy fallback
      I2P_INTERNAL_PROXIES: "notbob.i2p,purokishi.i2p,false.i2p,stormycloud.i2p"
      
      # Web server
      WEB_SERVER_HOST: 0.0.0.0
      WEB_SERVER_PORT: 8080
    ports:
      - "8080:8080"
    volumes:
      - ./output:/app/output
      - ./logs:/app/logs
    command: ["sh", "-c", "cd /app && PYTHONPATH=/app python -m portal.enhanced_portal"]

  # Tor Proxy Service
  tor-proxy:
    image: peterdavehello/tor-socks-proxy:latest
    restart: unless-stopped
    ports:
      - "9050:9150"  # Map external 9050 to internal 9150
    environment:
      - torsocks_port=9150
    healthcheck:
      test: ["CMD", "curl", "--proxy", "socks5h://localhost:9150", "--max-time", "10", "-s", "https://check.torproject.org/api/ip"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 120s

  # I2P Proxy Service  
  i2p-proxy:
    image: purplei2p/i2pd:latest
    restart: unless-stopped
    ports:
      - "4444:4444"  # HTTP proxy port
      - "7070:7070"  # Web console port
      - "7656:7656"  # SAM interface port
    environment:
      - ENABLE_IPV6=false
    volumes:
      - i2p_data:/home/i2pd/data
      - ./docker/i2pd/i2pd.conf:/home/i2pd/data/i2pd.conf:ro
    command: ["--conf=/home/i2pd/data/i2pd.conf"]
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "4444"]  # Test HTTP proxy port directly
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 300s  # I2P takes time to bootstrap

volumes:
  mariadb_data:
    driver: local
  minio_data:
    driver: local
  tor_data:
    driver: local
  i2p_data:
    driver: local

networks:
  default:
    name: noctipede-network
